version: "3.7"

services:
    nginx:
        container_name: app-nginx
        image: nginx
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
            - ./static-html:/usr/share/nginx/html
        links:
            - mysql-db
            - node-app
        ports:
            - "80:80"
        command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.conf && exec nginx -g 'daemon off;'"
        depends_on:
            # - react-app
            - node-app
        networks:
            - appnet
    mysql-db:
        image: mysql/mysql-server
        container_name: mysql-db
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
        volumes:
            - "./my.conf:/etc/mysql/conf.d/config-file.cnf"
            - "./data:/var/lib/mysql:rw"
        ports:
            - "3308:3306"
        expose:
            - "3306"
        networks:
            - appnet
    node-app:
        container_name: app-server
        ports:
            - "3030:3030"
        build:
            context: ./server
            dockerfile: Dockerfile
        volumes:
            - "./server:/usr/src/server"
            - "./server/node_modules:/usr/src/server/node_modules"
        environment:
            - NODE_ENV=${NODE_ENV}
        networks:
            - appnet
    sample-app:
        container_name: sample-app
        build:
            context: ./client_rc
            dockerfile: Dockerfile
        volumes:
            - "./client_rc/app:/usr/src/app"
            - "./client_rc/app/node_modules:/usr/src/app/node_modules"
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=${NODE_ENV}
            - CHOKIDAR_USEPOLLING=true

volumes:
    db_data:
networks:
    appnet:
        driver: "bridge"
